var LazyLoadImage=function(){"use strict";var t=this,r="section",s="image",i="bkg";t.init=function(e){if(t.isObserverDisabled=e&&void 0!==e.disableObserver&&e.disableObserver,t.supportsObserver="IntersectionObserver"in window,t.supportsObserver&&!t.isObserverDisabled){var a={root:null,rootMargin:"0px",threshold:[e&&void 0!==e.threshold?e.threshold:0]};t.setObserver(a)}if(t.params=t.params||{},e&&void 0!==e.sections&&void 0!==e.thumbUrl){t.params[r]=t.setParams(e.sections,"src",function(a){return a.getAttribute("data-"+e.thumbUrl)},"#"," li:not(.hidden) img"),t.subscribe(r)}e&&void 0!==e.class_name&&void 0!==e.dataSrc&&(t.params[s]=t.setParams(e.class_name,"src",function(a){return a.getAttribute("data-"+e.dataSrc)},".",""),t.subscribe(s)),e&&void 0!==e.classBkg&&void 0!==e.dataSrc&&(t.params[i]=t.setParams(e.classBkg,"style",function(a){return'url("'+a.getAttribute("data-"+e.dataBkg)+'")'},".",""),t.subscribe(i))},t.setParams=function(a,e,r,t,s){return{tag:a,attr:e,value:r,prefix:t,suffix:s}},t.subscribe=function(e){var r=t.params[e];r.tag=r.tag instanceof Array?r.tag:[r.tag],r.tag.forEach(function(a){document.querySelectorAll(r.prefix+a+r.suffix+":not([data-img_type])").forEach(function(a){t.params[e].value(a)&&(t.supportsObserver&&!t.isObserverDisabled?(a.setAttribute("data-img_type",e),t.observer.observe(a)):t.loadImage(a,t.params[e].attr,t.params[e].value(a),e))})})},t.setObserver=function(a){t.observer=new IntersectionObserver(function(a){a.forEach(function(a){if(a.isIntersecting){var e=a.target,r=e.getAttribute("data-img_type");t.loadImage(e,t.params[r].attr,t.params[r].value(e),r),t.observer.unobserve(e)}})},a)},t.loadImage=function(a,e,r,t){t===i?a.style.backgroundImage=r:a.setAttribute(e,r)}},myRawLazy=new LazyLoadImage;myRawLazy.init(page_params.lazyLoad);